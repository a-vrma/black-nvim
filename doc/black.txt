*black.txt*                                           Format your code using Black

--------------------------------------------------------------------------------
INTRODUCTION                                                  *black-introduction*

black-nvim formats your Python buffer asynchronously using Black
(https://github.com/psf/black). Its interface is simple: it defines a function,
`Black()`, that formats the entire buffer.

--------------------------------------------------------------------------------
USAGE                                                                *black-usage*

You can set `Black()` to a command, key mapping, or just call it directly.
I set it like this so that alt-shift-f formats the buffer
(in after/ftplugin/python.vim):
>
    if has("mac")
        nnoremap <buffer> <silent> Ï :Black<cr>
        inoremap <buffer> <silent> Ï <c-o>:Black<cr>
    elseif has("unix")
        nnoremap <buffer> <silent> <m-F> :Black<cr>
        inoremap <buffer> <silent> <m-F> <c-o>:Black<cr>
    endif
<

--------------------------------------------------------------------------------
CONFIGURATION                                                *black-configuration*

Use `black#settings`. For example:
>
    let g:black#settings = {
        \ 'fast': 1,
        \ 'line_length': 100
    \}
<

*   `fast` (default: 0)
    Set to a non-zero number to skip the AST check. This makes formatting a lot faster.
*   `line_length` (default: 88)
    Set to an integer to tell black where to wrap lines.

--------------------------------------------------------------------------------
LICENSE                                                            *black-license*

black-nvim was written by Aman Verma and is distributed under the MIT/Expat license.
See LICENSE file for details.

vim:ft=help:tw=80:ts=4:et:
